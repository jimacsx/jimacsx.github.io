{"version":3,"file":"static/js/Sales.0eec0199.chunk.js","mappings":"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","sources":["constants/index.ts","containers/PrintContainer.tsx","containers/NewOrderContainer.tsx","containers/OrderListContainer.tsx","containers/NewOrderProductContainer.tsx","containers/OrderContainer.tsx","layouts/Sales.tsx","webpack://app/./src/styles/styles.module.css?2744"],"sourcesContent":["import {\n  Side,\n  Promotion,\n  Product,\n  Order,\n  Customer,\n  OrderProduct,\n  PaperSize,\n  PaperCategory,\n  PaperType,\n} from \"../interfaces/Order\";\n\nexport const DocumentSides: Side[] = [\"F\", \"R\"];\n\n/**\n * Posibles catálogos que pueden ser consultados desde Base de Datos\n */\nexport const PromotionCatalog: Promotion[] = [\n  {\n    id: \"1\",\n    description: \"Promoción de Opalina\",\n    productId: \"1\",\n  },\n  {\n    id: \"2\",\n    description: \"Promoción de BOND\",\n    productId: \"2\",\n  },\n];\n\nexport const Products: Product[] = [\n  {\n    id: \"1\",\n    description: \"Impresiones\",\n    unitPrice: 0.5,\n  },\n  {\n    id: \"2\",\n    description: \"Pines\",\n    unitPrice: 5,\n  },\n  {\n    id: \"3\",\n    description: \"Acabados\",\n    unitPrice: 3,\n  },\n  {\n    id: \"4\",\n    description: \"Otros\",\n    unitPrice: 10,\n  },\n];\n\nconst OrderProducts: OrderProduct[] = [\n  {\n    orderId: \"1\",\n    product: Products[0],\n    productQuantity: 10,\n    pritingSides: [\"F\"],\n  },\n];\n\nexport const Customer1: Customer = {\n  id: \"1\",\n  names: \"Willians Dario\",\n  lastName: \"Jiménez\",\n  motherLastName: \"Andrade\",\n};\n\nexport const Orders: Order[] = [\n  {\n    id: \"1\",\n    number: 1,\n    customer: Customer1,\n    products: OrderProducts,\n    creationDate: \"2022-01-23T12:42:56.928-0600\",\n    amount: 150,\n  },\n];\n\nexport const PaperSizes: PaperSize[] = [\"Tabloide\", \"Carta\"];\n\nexport const PaperCategories: PaperCategory[] = [\n  {\n    id: \"1\",\n    description: \"Gruesos\",\n  },\n  {\n    id: \"2\",\n    description: \"Delgados\",\n  },\n  {\n    id: \"3\",\n    description: \"Plus\",\n  },\n  {\n    id: \"4\",\n    description: \"Especiales\",\n  },\n];\n\nexport const PaperTypesCatalog: PaperType[] = [\n  {\n    id: \"1\",\n    description: \"Couche 300gr\",\n    label: \"COU 300gr\",\n    paperCategoryId: \"1\",\n  },\n  {\n    id: \"2\",\n    description: \"Sulfatada 12pt\",\n    label: \"SULF 12pt\",\n    paperCategoryId: \"1\",\n  },\n  {\n    id: \"3\",\n    description: \"Opalina\",\n    label: \"OPALINA\",\n    paperCategoryId: \"1\",\n  },\n  {\n    id: \"4\",\n    description: \"Albanene\",\n    label: \"ALBANENE\",\n    paperCategoryId: \"1\",\n  },\n  {\n    id: \"5\",\n    description: \"Couche 200gr\",\n    label: \"COU 200gr\",\n    paperCategoryId: \"2\",\n  },\n  {\n    id: \"6\",\n    description: \"Couche 150gr\",\n    label: \"COU 150gr\",\n    paperCategoryId: \"2\",\n  },\n  {\n    id: \"7\",\n    description: \"Papel Opalina\",\n    label: \"PAPEL OPALINA\",\n    paperCategoryId: \"2\",\n  },\n  {\n    id: \"8\",\n    description: \"Bond\",\n    label: \"BOND\",\n    paperCategoryId: \"2\",\n  },\n  {\n    id: \"9\",\n    description: \"Adhesivo\",\n    label: \"ADHESIVO\",\n    paperCategoryId: \"3\",\n  },\n  {\n    id: \"10\",\n    description: \"Sulfatada 14pt\",\n    label: \"SULF 14pt\",\n    paperCategoryId: \"3\",\n  },\n  {\n    id: \"11\",\n    description: \"Opalina Crema\",\n    label: \"OPALINA CREMA\",\n    paperCategoryId: \"3\",\n  },\n  {\n    id: \"12\",\n    description: \"Metálicos\",\n    label: \"METÁLICOS\",\n    paperCategoryId: \"4\",\n  },\n  {\n    id: \"13\",\n    description: \"Texturizados\",\n    label: \"TEXTURIZADOS\",\n    paperCategoryId: \"4\",\n  },\n];\n","import { Box, ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { PaperSize, PaperType, PaperTypes } from \"../interfaces/Order\";\nimport { PaperSizes, PaperTypesCatalog } from \"../constants\";\n\nexport const PrintContainer = () => {\n  const [paperSize, setPaperSize] = useState<PaperSize>(\"Tabloide\");\n  const [paperType, setPaperType] = useState<PaperTypes>(\"COU 300gr\");\n\n  const handlePaperSizeChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: PaperSize\n  ) => {\n    setPaperSize(newAlignment);\n  };\n\n  const handlePaperTypeChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: PaperTypes\n  ) => {\n    setPaperType(newAlignment);\n  };\n\n  /**\n   * \n   * @param productId id del producto seleccionado\n   * @param subcategoryId  id de la subcategoria seleccionada ej: 'TABLOIDE' | 'CARTA' | 'DUPLEX TABLOIDE' | 'DUPLEX CARTA'\n   * @returns tabulador de precios\n   */\n  const getTabuladorPrecios = (productId: string, subcategoryId: string) => {\n    return [\n      { inferior: 1, superior: 9, precio: '12' },\n      { inferior: 10, superior: 150, precio: '11' },\n      { inferior: 151, superior: 500, precio: '10.5' },\n      { inferior: 501, superior: 800, precio: '10.0' },\n      { inferior: 801, superior: 1100, precio: '9.0' },\n      { inferior: 1101, precio: '12' }\n    ]\n  }\n\n  console.log(getTabuladorPrecios)\n\n  return (\n    <div>\n      <p>Tamaño de papel:</p>\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={paperSize}\n        exclusive\n        onChange={handlePaperSizeChange}\n      >\n        {PaperSizes.map((ps: PaperSize, index: number) => (\n          <ToggleButton key={index} value={ps}>\n            {ps}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n      <Box sx={{ maxWidth: 500 }}>\n        <p>Tipo de papel:</p>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={paperType}\n          exclusive\n          onChange={handlePaperTypeChange}\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {PaperTypesCatalog.map((pt: PaperType, index: number) => (\n            <ToggleButton key={index} value={pt.label}>\n              {pt?.label}\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </Box>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Tabs, Button, Tab, Box, TextField, Grid, Paper } from \"@mui/material\";\nimport LocalPrintshopIcon from \"@mui/icons-material/LocalPrintshop\";\nimport ReceiptLongIcon from \"@mui/icons-material/ReceiptLong\";\nimport LocalPoliceIcon from \"@mui/icons-material/LocalPolice\";\nimport AutoFixHighIcon from \"@mui/icons-material/AutoFixHigh\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { TabPanel } from \"../components\";\nimport { PrintContainer } from \"./PrintContainer\";\nimport { Order } from \"../interfaces/Order\";\n\ninterface Props {\n  order?: Order;\n  onBack?: () => void;\n}\n\nexport const NewOrderContainer = ({ order, onBack }: Props) => {\n  console.log(\"%New Order: \", \"color: blue\", order);\n\n  const [tabNumber, setTabNumber] = useState<number>(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabNumber(newValue);\n  };\n\n  return (\n    <Box>\n      <Paper elevation={3}>\n        <Box sx={{ p: 3, pb: 0, maxWidth: 400 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"customer-name\"\n                label=\"Cliente: \"\n                variant=\"standard\"\n                size=\"small\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"customer-phone\"\n                label=\"Teléfono: \"\n                variant=\"standard\"\n                size=\"small\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Tabs\n            value={tabNumber}\n            onChange={handleTabChange}\n            aria-label=\"icon label tabs\"\n          >\n            <Tab icon={<LocalPrintshopIcon />} label=\"Impresiones\" />\n            <Tab icon={<ReceiptLongIcon />} label=\"Laminados\" />\n            <Tab icon={<LocalPoliceIcon />} label=\"Pines\" />\n            <Tab icon={<AutoFixHighIcon />} label=\"Terminados\" />\n            <Tab icon={<MoreHorizIcon />} label=\"Otros\" />\n          </Tabs>\n          <TabPanel value={tabNumber} index={0}>\n            {<PrintContainer />}\n          </TabPanel>\n          <TabPanel value={tabNumber} index={1}>\n            {<p>Laminados</p>}\n          </TabPanel>\n          <TabPanel value={tabNumber} index={2}>\n            {<p>Pines</p>}\n          </TabPanel>\n          <TabPanel value={tabNumber} index={3}>\n            {<p>Terminados</p>}\n          </TabPanel>\n          <TabPanel value={tabNumber} index={4}>\n            {<p>Otros</p>}\n          </TabPanel>\n        </Box>\n        <Button variant=\"contained\" onClick={onBack} color=\"primary\">\n          Cancelar\n        </Button>\n      </Paper>\n    </Box>\n  );\n};\n","import { Orders } from \"../constants\";\n\nexport const OrderListContainer = () => {\n  return (\n    <div>\n      <h2>Ordenes del día</h2>\n      <pre>{JSON.stringify(Orders, null, 2)}</pre>\n    </div>\n  );\n};\n","import { createContext } from \"react\";\nimport { Order, OrderProduct } from \"../interfaces/Order\";\nimport { OrderProductContextProps } from \"../interfaces/OrderProduct\";\n\nexport const OrderProductContext = createContext(\n  {} as OrderProductContextProps\n);\nconst { Provider } = OrderProductContext;\n\ninterface Props {\n  selectedProduct: OrderProduct;\n  order: Order;\n}\n\nexport const NewOrderProductContainer = ({ selectedProduct }: Props) => {\n  return (\n    <Provider\n      value={{\n        product: selectedProduct,\n      }}\n    >\n      <div>\n        <h3>Nuevo Producto de la orden</h3>\n        <pre>{JSON.stringify(selectedProduct, null, 2)}</pre>\n      </div>\n    </Provider>\n  );\n};\n\nexport default NewOrderProductContainer;\n","import { createContext } from \"react\";\nimport {\n  Customer,\n  Order,\n  OrderProduct,\n  Product,\n  OrderContextProps,\n} from \"../interfaces/Order\";\nimport { NewOrderProductContainer } from \"./NewOrderProductContainer\";\n\nexport const OrderContext = createContext({} as OrderContextProps);\nconst { Provider } = OrderContext;\n\nconst INITIAL_CUSTOMER: Customer = {\n  names: \"Willians Dario\",\n  lastName: \"Jiménez\",\n  motherLastName: \"Andrade\",\n};\n\nconst PRODUCT_1: Product = {\n  id: \"1\",\n  description: \"Impresiones\",\n  unitPrice: 0.5,\n};\n\nconst PRODUCT_2: Product = {\n  id: \"2\",\n  description: \"Pines\",\n  unitPrice: 3,\n};\n\nconst PRODUCT_3: Product = {\n  id: \"3\",\n  description: \"Acabados\",\n  unitPrice: 5,\n};\n\nconst PRODUCT_4: Product = {\n  id: \"4\",\n  description: \"Otros\",\n  unitPrice: 1,\n};\n\nconst INITIAL_ORDER_PRODUCTS: OrderProduct[] = [\n  {\n    orderId: \"1\",\n    product: PRODUCT_1,\n    productQuantity: 0,\n    pritingSides: [\"F\"],\n  },\n  {\n    orderId: \"1\",\n    product: PRODUCT_2,\n    productQuantity: 0,\n    pritingSides: [\"F\"],\n  },\n  {\n    orderId: \"1\",\n    product: PRODUCT_3,\n    productQuantity: 0,\n    pritingSides: [\"F\", \"R\"],\n  },\n  {\n    orderId: \"1\",\n    product: PRODUCT_4,\n    productQuantity: 0,\n    pritingSides: [\"F\", \"R\"],\n  },\n];\n\nconst INITIAL_ORDER: Order = {\n  id: \"1\",\n  number: 1,\n  customer: INITIAL_CUSTOMER,\n  products: INITIAL_ORDER_PRODUCTS,\n  creationDate: \"2022-01-23T12:42:56.928-0600\",\n};\n\n/**\n * Constantes para el formulario del Nuevo Producto de la Orden\n */\nconst SELECTED_ORDER_PRODUCT: OrderProduct = {\n  orderId: \"1\",\n  product: PRODUCT_1,\n  productQuantity: 0,\n  pritingSides: [],\n  additionalFeature: \"\",\n  varnishSides: [],\n  applyPromo: false,\n};\n/**\n * Final de Constantes para el formulario del Nuevo Producto de la Orden\n */\n\nexport const OrderContainer = () => {\n  const order = INITIAL_ORDER;\n  return (\n    <Provider\n      value={{\n        order,\n      }}\n    >\n      <div>\n        <NewOrderProductContainer\n          selectedProduct={SELECTED_ORDER_PRODUCT}\n          order={order}\n        />\n        <h2>Orden</h2>\n        <pre>{JSON.stringify(INITIAL_ORDER, null, 2)}</pre>\n      </div>\n    </Provider>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { Header } from \"../components\";\nimport { NewOrderContainer, OrderListContainer } from \"../containers\";\nimport Button from \"@mui/material/Button\";\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\n\nimport styles from \"../styles/styles.module.css\";\n\nexport const Sales = () => {\n  const [newOrderState, setNewOrderState] = useState<boolean>(false);\n\n  const newOrder = useCallback(() => {\n    setNewOrderState(true);\n  }, []);\n\n  const backToList = useCallback(() => {\n    setNewOrderState(false);\n  }, []);\n\n  return (\n    <div className={styles.pageContainer}>\n      <Header title=\"Ventas\" withDate />\n      {!!!newOrderState && (\n        <Button\n          variant=\"contained\"\n          startIcon={<ShoppingCartIcon />}\n          onClick={newOrder}\n        >\n          Generar orden\n        </Button>\n      )}\n      {!!newOrderState && <NewOrderContainer onBack={backToList} />}\n      {!!!newOrderState && <OrderListContainer />}\n    </div>\n  );\n};\n\nexport default Sales;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageContainer\":\"styles_pageContainer__3pi1V\",\"layoutContainer\":\"styles_layoutContainer__EosnQ\",\"typography\":\"styles_typography__CIIOj\"};"],"names":["Orders","id","number","customer","names","lastName","motherLastName","products","orderId","product","description","unitPrice","productQuantity","pritingSides","creationDate","amount","PaperSizes","PaperTypesCatalog","label","paperCategoryId","PrintContainer","useState","paperSize","setPaperSize","paperType","setPaperType","console","log","productId","subcategoryId","inferior","superior","precio","ToggleButtonGroup","color","value","exclusive","onChange","event","newAlignment","map","ps","index","ToggleButton","Box","sx","maxWidth","style","display","flexWrap","pt","NewOrderContainer","order","onBack","tabNumber","setTabNumber","Paper","elevation","p","pb","Grid","container","spacing","item","xs","TextField","variant","size","fullWidth","Tabs","newValue","Tab","icon","LocalPrintshop","ReceiptLong","LocalPolice","AutoFixHigh","MoreHoriz","Button","onClick","OrderListContainer","createContext","Provider","JSON","stringify","Sales","newOrderState","setNewOrderState","newOrder","useCallback","backToList","className","styles","title","withDate","startIcon","ShoppingCart"],"sourceRoot":""}